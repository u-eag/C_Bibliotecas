***** Headers *****

/** \brief Esta función calcula la suma de dos números enteros (x+y).
 *
 * \param Se ingresa un número entero.
 * \param Devuelve un número entero.
 * \return Devuelve la suma de dos enteros.
 *
 */
int suma (int x, int y);

/** \brief Esta función calcula la resta de dos números enteros (x-y).
 *
 * \param Se ingresa un número entero.
 * \param Devuelve un número entero.
 * \return Devuelve la resta de dos enteros.
 *
 */
int resta (int x, int y);

/** \brief Esta función calcula la división de dos números enteros (x/y).
 *
 * \param Se ingresa un número entero.
 * \param Devuelve un número flotante.
 * \return Devuelve la división de dos enteros.
 *
 */
float division (int x, int y);

/** \brief Esta función calcula la multiplicación de dos números enteros (x*y).
 *
 * \param Se ingresa un número entero.
 * \param Devuelve un número entero.
 * \return Devuelve la multiplicación de dos números enteros.
 *
 */
int multiplicacion (int x, int y);

/** \brief Esta función calcula el factorial de un número x (x!).
 *
 * \param Se ingresa un número entero.
 * \param Devuelve un número entero.
 * \return Devuelve el resultado del factorial si el número ingresado es igual o mayor a cero.
 *         Devuelve -1 para indicar error si el número ingresado es negativo.
 */
int factorial (int x);


***** Sources *****

int suma (int x, int y)
{
int result;

result = x + y;

return result;
}

int resta (int x, int y)
{
int result;

result = x - y;

return result;
}

float division (int x, int y)
{
float result;

result = (float)x / y;

return result;
}

int multiplicacion (int x, int y)
{
int result;

result = x * y;

return result;
}

int factorial (int x)
{
    int result;
    int acumuladorFactorial=1;
        // inicializo el acumulador de la multiplicación en 1 porque 1 es el número neutro en la multiplicación
    int i;

    if(x>=0){
        for(i=x;i>1;i--){
            acumuladorFactorial=acumuladorFactorial*i;
        }
        result=acumuladorFactorial;
    } else {
        result=-1;
        // el factorial de un negativo no existe y el factorial de un positivo nunca da negativo
        // por lo tanto puedo usar cualquier numero negativo para indicar error
    }

    return result;
}

